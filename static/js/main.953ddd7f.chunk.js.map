{"version":3,"sources":["components/Navbar/index.js","pages/Contact.js","pages/About.js","components/Card/index.js","pages/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","target","Contact","rel","About","Card","props","style","maxWidth","src","image","alt","name","description","technologies","note","tryLink","repository","Portfolio","state","projects","newProjectsArr","this","map","project","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.953ddd7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Navbar() {\r\nreturn (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to='/portfolio'>Portfolio</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"https://www.linkedin.com/in/john-oh-2ab104215/\" target=\"blank\">My LinkedIn</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div>\r\n     <div className=\"container\">\r\n       <h1>Contact Me</h1>\r\n       <p>\r\n         <a href=\"mailto:johnoh@usc.edu\">\r\n           <i className=\"fas fa-envelope icon\"> johnoh@usc.edu</i>\r\n          </a>\r\n       </p>\r\n\r\n       <p>\r\n         <a href=\"https://www.linkedin.com/in/john-oh-2ab104215/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n           <i className=\"fab fa-linkedin icon\"> LinkedIn</i>\r\n         </a>\r\n       </p>\r\n\r\n       <p>\r\n         <a href=\"https://github.com/therealohzone\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n           <i className=\"fab fa-github icon\"> GitHub</i>\r\n         </a>\r\n       </p>\r\n     </div>\r\n    </div>\r\n    \r\n  );  \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\n\r\n\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n       \r\n        \r\n        <div className=\"row mb-5\">\r\n          <h1>Hi! I'm John, Nice to Meet You!</h1>\r\n        </div>\r\n\r\n       \r\n        <div className=\"row\">\r\n          \r\n         \r\n          <div className=\"col-lg-6\">\r\n\r\n        \r\n\r\n            <p>Contact Me:</p>\r\n            <div className=\"row\">\r\n              <a href=\"https://github.com/therealohzone\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github icon\"></i></a>\r\n              <a href=\"https://www.linkedin.com/in/john-oh-2ab104215/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin icon\"></i></a>\r\n              <a href=\"mailto:johnoh@usc.edu\"><i className=\"fas fa-envelope icon\"></i></a>\r\n            </div>\r\n            \r\n          </div>\r\n\r\n         \r\n          <div className=\"col-lg-6\">\r\n            <p className=\"aboutText\">\r\n              I am a Full Stack Developer based in Atlanta, GA with a Bachelor's in Biological Sciences from the University of Southern California. While working as a Lab Technician, I helped create a website for a friend and realized that this was a career that I'd wish to pursue. \r\n            </p>\r\n      \r\n            <p className=\"aboutText\">\r\n              With this in mind, I enrolled in Georgia Tech's Full Time Coding Bootcamp to equip myself with the knowledge to pursue this dream.  I now have experience and am proficient with the MERN stack (MongoDB, Express.js, React.js, and Node.js).\r\n            </p>\r\n\r\n            <p className=\"aboutText\">\r\n              Some hobbies that I enjoy when I am not coding or learning is Fly Fishing, playing my guitar, and photagraphy.\r\n            </p>\r\n\r\n\r\n            <p className=\"aboutText\">\r\n            The Technologies I am experienced in:\r\n              <ul>\r\n                <li>HTML 5 & CSS</li>\r\n                <li>JavaScript</li>\r\n                <li>jQuery</li>\r\n                <li>Bootstrap</li>\r\n                <li>MERN (MongoDB, Express, React, Node)</li>\r\n              </ul>\r\n            </p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\n\r\nfunction Card(props) {\r\n  return (\r\n <div>\r\n      <div className=\"card mb-3\" style={{maxWidth: \"1000px\"}}>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-md-4\">\r\n            <img src={props.image} className=\"card-img\" alt=\"...\" />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{props.name}</h5>\r\n              <p className=\"card-text\">{props.description}</p>\r\n              <p className=\"card-text\"><small className=\"text-muted\">{props.technologies}</small></p>\r\n              <p className=\"card-text\"><small className=\"text-muted\">{props.note}</small></p>\r\n              <a href={props.tryLink} className=\"btn btn-primary\" target=\"_blank\" rel=\"noopener noreferrer\">Try It!</a>\r\n              <a href={props.repository} className=\"btn btn-primary\" target=\"_blank\" rel=\"noopener noreferrer\">See the Repository!</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from './../components/Card';\r\nimport projects from './../project.json';\r\nimport './../assets/styles/portfolio.css';\r\n\r\nclass Portfolio extends Component {\r\n  // keep track of project data\r\n  state = {\r\n    projects: projects,\r\n  }\r\n\r\n  render() {\r\n    // map through project data and create a Bootstrap card for each project\r\n    const projectsArr = this.state.projects;\r\n    const newProjectsArr = projectsArr.map((project) => \r\n      <Card \r\n        id={project.id}\r\n        name={project.name}\r\n        image={project.image}\r\n        description={project.description}\r\n        tryLink={project.tryLink}\r\n        repository={project.repository}\r\n        note={project.note}\r\n        technologies={project.technologies}\r\n      />\r\n    );\r\n\r\n    return(\r\n      <div>\r\n\r\n        <div className=\"container mb-5\">\r\n          <h1>Portfolio</h1>\r\n          <h3>Here are some projects I've worked on.</h3>\r\n        </div>\r\n          \r\n        \r\n        <div className=\"flex-container\">\r\n          \r\n          {/* render the newProjects array, which is an array of Bootstrap cards */}\r\n          {newProjectsArr}\r\n\r\n        </div>\r\n      </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\nimport Navbar from './components/Navbar/';\nimport Contact from './pages/Contact';\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Route exact path='/' component={About} />\n        <Route exact path='/contact' component={Contact} />\n        <Route exact path='/portfolio' component={Portfolio} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}